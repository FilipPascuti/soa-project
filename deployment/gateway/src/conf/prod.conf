server {
  listen 8080;

  location /check-token {
    add_header 'Access-Control-Allow-Headers' 'Authorization' always;
    internal;
    proxy_pass        http://service-auth:3000/check-token;
    proxy_redirect    off;
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $server_name;
    proxy_set_header  Authorization $http_authorization;
    proxy_set_header  Content-Length "";
    proxy_pass_request_body off;
  }

  location /auth {
    rewrite ^/auth/(.*) /$1 break;

    proxy_pass        http://service-auth:3000;
    proxy_redirect    off;
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $server_name;
  }


  location /ticket {
     if ($request_method = OPTIONS) {
          add_header 'Access-Control-Allow-Origin' * always;
          add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
          add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type' always;
          add_header 'Access-Control-Max-Age' 86400 always;
          add_header 'Content-Length' 0 always;
          return 200;
      }

    add_header 'Access-Control-Allow-Headers' 'Authorization' always;
    auth_request /check-token;
    auth_request_set $user_id $sent_http_user_id;

    rewrite ^/ticket/(.*) /$1 break;

    proxy_pass        http://service-ticket:3000;
    proxy_redirect    off;
    proxy_set_header  Host $host;
    proxy_set_header  X-Real-IP $remote_addr;
    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Host $server_name;
    proxy_set_header  User-Id $user_id;
  }
}

